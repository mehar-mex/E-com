{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    orders: JSON.parse(localStorage.getItem('orders')) || []\n  },\n  reducers: {\n    addOrder: (state, action) => {\n      const newOrder = {\n        id: Date.now(),\n        items: action.payload.items,\n        total: action.payload.total,\n        date: new Date().toISOString(),\n        status: 'Completed'\n      };\n      state.orders.unshift(newOrder);\n      localStorage.setItem('orders', JSON.stringify(state.orders));\n    },\n    cancelOrder: (state, action) => {\n      const orderId = action.payload;\n      const orderIndex = state.orders.findIndex(order => order.id === orderId);\n      if (orderIndex !== -1) {\n        state.orders[orderIndex].status = 'Cancelled';\n        localStorage.setItem('orders', JSON.stringify(state.orders));\n      }\n    }\n  }\n});\nexport const {\n  addOrder,\n  cancelOrder\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","ordersSlice","name","initialState","orders","JSON","parse","localStorage","getItem","reducers","addOrder","state","action","newOrder","id","Date","now","items","payload","total","date","toISOString","status","unshift","setItem","stringify","cancelOrder","orderId","orderIndex","findIndex","order","actions","reducer"],"sources":["D:/E-commerce/Structured/Frontend/src/store/ordersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    orders: JSON.parse(localStorage.getItem('orders')) || [],\n  },\n  reducers: {\n    addOrder: (state, action) => {\n      const newOrder = {\n        id: Date.now(),\n        items: action.payload.items,\n        total: action.payload.total,\n        date: new Date().toISOString(),\n        status: 'Completed'\n      };\n      state.orders.unshift(newOrder);\n      localStorage.setItem('orders', JSON.stringify(state.orders));\n    },\n    cancelOrder: (state, action) => {\n      const orderId = action.payload;\n      const orderIndex = state.orders.findIndex(order => order.id === orderId);\n      if (orderIndex !== -1) {\n        state.orders[orderIndex].status = 'Cancelled';\n        localStorage.setItem('orders', JSON.stringify(state.orders));\n      }\n    },\n  },\n});\n\nexport const { addOrder, cancelOrder } = ordersSlice.actions;\nexport default ordersSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI;EACxD,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMC,QAAQ,GAAG;QACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,KAAK,EAAEL,MAAM,CAACM,OAAO,CAACD,KAAK;QAC3BE,KAAK,EAAEP,MAAM,CAACM,OAAO,CAACC,KAAK;QAC3BC,IAAI,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC;QAC9BC,MAAM,EAAE;MACV,CAAC;MACDX,KAAK,CAACP,MAAM,CAACmB,OAAO,CAACV,QAAQ,CAAC;MAC9BN,YAAY,CAACiB,OAAO,CAAC,QAAQ,EAAEnB,IAAI,CAACoB,SAAS,CAACd,KAAK,CAACP,MAAM,CAAC,CAAC;IAC9D,CAAC;IACDsB,WAAW,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMe,OAAO,GAAGf,MAAM,CAACM,OAAO;MAC9B,MAAMU,UAAU,GAAGjB,KAAK,CAACP,MAAM,CAACyB,SAAS,CAACC,KAAK,IAAIA,KAAK,CAAChB,EAAE,KAAKa,OAAO,CAAC;MACxE,IAAIC,UAAU,KAAK,CAAC,CAAC,EAAE;QACrBjB,KAAK,CAACP,MAAM,CAACwB,UAAU,CAAC,CAACN,MAAM,GAAG,WAAW;QAC7Cf,YAAY,CAACiB,OAAO,CAAC,QAAQ,EAAEnB,IAAI,CAACoB,SAAS,CAACd,KAAK,CAACP,MAAM,CAAC,CAAC;MAC9D;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,QAAQ;EAAEgB;AAAY,CAAC,GAAGzB,WAAW,CAAC8B,OAAO;AAC5D,eAAe9B,WAAW,CAAC+B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}